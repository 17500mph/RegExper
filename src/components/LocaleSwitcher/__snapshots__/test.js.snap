// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocaleSwitcher rendering 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LocaleSwitcherImpl />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithMergedOptions(TransComponent)>
          Language
        </WithMergedOptions(TransComponent)>,
        <div
          className="switcher"
        >
          <select
            onChange={[Function]}
            value="en"
          >
            <option
              value="en"
            >
              English
            </option>
            <option
              value="other"
            >
              Other
            </option>
          </select>
          <ChevronsDown
            color="currentColor"
            size="24"
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Language",
        },
        "ref": null,
        "rendered": "Language",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <select
              onChange={[Function]}
              value="en"
            >
              <option
                value="en"
              >
                English
              </option>
              <option
                value="other"
              >
                Other
              </option>
            </select>,
            <ChevronsDown
              color="currentColor"
              size="24"
            />,
          ],
          "className": "switcher",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="en"
                >
                  English
                </option>,
                <option
                  value="other"
                >
                  Other
                </option>,
              ],
              "onChange": [Function],
              "value": "en",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "en",
                "nodeType": "host",
                "props": Object {
                  "children": "English",
                  "value": "en",
                },
                "ref": null,
                "rendered": "English",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "other",
                "nodeType": "host",
                "props": Object {
                  "children": "Other",
                  "value": "other",
                },
                "ref": null,
                "rendered": "Other",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "currentColor",
              "size": "24",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "label",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithMergedOptions(TransComponent)>
            Language
          </WithMergedOptions(TransComponent)>,
          <div
            className="switcher"
          >
            <select
              onChange={[Function]}
              value="en"
            >
              <option
                value="en"
              >
                English
              </option>
              <option
                value="other"
              >
                Other
              </option>
            </select>
            <ChevronsDown
              color="currentColor"
              size="24"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Language",
          },
          "ref": null,
          "rendered": "Language",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <select
                onChange={[Function]}
                value="en"
              >
                <option
                  value="en"
                >
                  English
                </option>
                <option
                  value="other"
                >
                  Other
                </option>
              </select>,
              <ChevronsDown
                color="currentColor"
                size="24"
              />,
            ],
            "className": "switcher",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="en"
                  >
                    English
                  </option>,
                  <option
                    value="other"
                  >
                    Other
                  </option>,
                ],
                "onChange": [Function],
                "value": "en",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "en",
                  "nodeType": "host",
                  "props": Object {
                    "children": "English",
                    "value": "en",
                  },
                  "ref": null,
                  "rendered": "English",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "other",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Other",
                    "value": "other",
                  },
                  "ref": null,
                  "rendered": "Other",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "currentColor",
                "size": "24",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "label",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
